# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
    push:
        branches: [master]
    workflow_dispatch:

jobs:
    Test:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: api

        strategy:
            matrix:
                node-version: [16.x]
                # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
                mongodb-version: ['4.2']

        steps:
            - name: Checkout the repository
            - uses: actions/checkout@v2
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v2
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: "npm"
                  
            - name: Start MongoDB
              uses: supercharge/mongodb-github-action@1.7.0
              with:
                mongodb-version: ${{ matrix.mongodb-version }}
            - run: npm ci
            - run: npm run test:staging
    Storing-previous-image-with-new-tag:
        needs: Test
        runs-on: ubuntu-latest
        steps:
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v1
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v1
            - name: Login to DockerHub
              uses: docker/login-action@v1
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
                  
            - name: Set outputs
              id: vars
              run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
            - name: Check outputs
              run: echo ${{ steps.vars.outputs.sha_short }}
            - name: Retag latest image to outputs.sha_shorts
              run: |
                docker pull ${{secrets.DOCKERHUB_IMAGE}}:latest
                docker tag ${{secrets.DOCKERHUB_IMAGE}}:latest ${{secrets.DOCKERHUB_IMAGE}}:${{ steps.vars.outputs.sha_short }}
                docker push ${{secrets.DOCKERHUB_IMAGE}}:${{ steps.vars.outputs.sha_short }}

    
            
                
        
